"""
    Items and spawning:
    
    In my understanding, item prototypes will write over arbitrary non-category attributes.
    That means that any type expecting to be spawned needs to read its attributes into
    class variables, which I suppose is normal for evennia.
"""

from .item import Item
from .objects import Object
from evennia.prototypes import spawner

class ResourceNode(Object):
    """
    A Resource Node generates items from prototypes.  These are intended for use with
    forage-type skills, and may be automatically generated by a room.
    Nodes have one or more resource types, and may randomly run out of resources.
    """
    

class Resource(Item):
    """
        A Resource object is specifically something intended for crafting or selling.
        Resources are tagged by type and quality and may later have other stuff for stuff.
        
        Resources have quality, quantity, and type essence, and bonus essence.
        Type essences are implicit from the type, are subtyped, and can be multiple.
        For example, plant.flower.rose.stonerose,rock.marble.  All subtypes can be
        used in place of a parent, like rock.marble being used for any alchemy requiring rock.
        
        Bonus essences are for rare subtypes.  For example, a "magma rose" might be
        a marble-type stone rose with added fire.magma bonus essence.  Rare subtypes
        can be used as though they were a standard resource of that type.
    """
    
    pass